unit Server_U;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ScktComp, ComCtrls, idglobal, ExtCtrls, ShellAPI;

type
  TForm1 = class(TForm)
    Button1: TButton;
    Memo1: TMemo;
    Label1: TLabel;
    ServerSocket1: TServerSocket;
    ServerSocket2: TServerSocket;
    GroupBox1: TGroupBox;
    Edit1: TEdit;
    Edit2: TEdit;
    Label2: TLabel;
    Label3: TLabel;
    ProgressBar1: TProgressBar;
    Timer1: TTimer;
    StatusBar1: TStatusBar;
    Edit3: TEdit;
    Button2: TButton;
    Label4: TLabel;
    CheckBox1: TCheckBox;
    Button3: TButton;
    Button4: TButton;
    procedure Button1Click(Sender: TObject);
    procedure ServerSocket1Accept(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure ServerSocket2Accept(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure ServerSocket1ClientRead(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure ServerSocket2ClientRead(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Edit3KeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
    IncommingStream: TFileStream;
    TimeTaken: integer;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

// Written by me ColdFuzion
// All i ask is i be given some credit for coding this my e-mail is ColdFuzion@hushmail.com
// Program Usage: To recieve Files sent by the client

procedure TForm1.Button1Click(Sender: TObject);
begin
   ServerSocket1.Open;
   Memo1.Lines.Add('Server Listening on '+inttostr(ServerSocket1.Port) );
end;

procedure TForm1.ServerSocket1Accept(Sender: TObject;
  Socket: TCustomWinSocket);
begin
   Memo1.Lines.Add('Client connected From '+Socket.RemoteHost);
   Memo1.Lines.Add('User IP is '+Socket.RemoteAddress);
end;

procedure TForm1.ServerSocket2Accept(Sender: TObject;
  Socket: TCustomWinSocket);
begin
   Memo1.Lines.Add('Incoming File Transfer');
end;

procedure TForm1.ServerSocket1ClientRead(Sender: TObject;
  Socket: TCustomWinSocket);
var IncommingText, StrippedData, CommandName: string;
begin
     IncommingText := socket.ReceiveText;
     Memo1.Lines.Add(IncommingText);
     StrippedData := copy(IncommingText,6,length(IncommingText) );
     CommandName := copy(IncommingText,0,5);
     if CommandName = 'FILE!' then
     begin
        IncommingStream := TFileStream.Create(StrippedData, fmCREATE or fmOPENWRITE and fmsharedenywrite); // Once File name is recieved the stream to recieve
        Edit1.Text := StrippedData;                                                                        // The file is created
        ServerSocket2.Open;
     end
     else
     if CommandName = 'SIZE!' then
     begin
        Edit2.Text := StrippedData;
        ProgressBar1.Max := StrToInt(StrippedData);
        ProgressBar1.Min := 0;
        Memo1.lines.Add('Recieving File '+Edit1.Text +' of size '+Edit2.Text);
     end;




     end;

procedure TForm1.ServerSocket2ClientRead(Sender: TObject;
 // This is the secondary socket it is the most important part of the program
  Socket: TCustomWinSocket);
  // It processes the incomming file stream
var Buffer: array [0..9999] of Char;
    IncommingLen, RecievedLen: integer;
    Filepath: string;
begin
   Timer1.Enabled := True;
   IncommingLen := socket.ReceiveLength;
   // If the size of any incomming data is the size of 0 then the process begins
    Filepath := ExtractFilePath(Edit1.Text)+Edit1.Text;
    // Sets a String Filepath for the actual directory with the filename so that the shellexecute can run this after
    while IncommingLen > 0 do
    // Must make sure the process ends

    begin
       RecievedLen := socket.ReceiveBuf(Buffer, Sizeof(Buffer));
       // Changes the size of RecievedLen by the amount of incoming data recieved
    if RecievedLen <= 0 then
    // Small part of the code where once the buffer reaches 0 the code will exit
       Break
    else
    IncommingStream.Write(Buffer, RecievedLen);
    // Writes the Incoming data into a new stream by the filename and size which is recieved
    ProgressBar1.StepBy(RecievedLen);
    // through the primary socket Also this line increases the progess indicator bar
    if IncommingStream.Size >= strtoint(Edit2.Text) then
    // Onces the stream size begins to reach the size which was sent before sending the file then this
    begin
     // procedure will start
       IncommingStream.Free;
        // Free's the stream
       memo1.Lines.Add('File '+Edit1.Text +' Recieved Successfuly');
       memo1.Lines.Add('Time Taken to Recieve File ' +IntToStr(TimeTaken)+' seconds');
       ServerSocket1.Socket.Connections[0].SendText('DONE!');
       Edit1.Text := '';
       // From here it starts setting the variables back
       Edit2.Text := '';
       ProgressBar1.Position := 0;
       Timer1.Enabled := False;
       TimeTaken := 0;
       if Messagedlg('Would you Like to open the recieved file?', mtConfirmation, [MbYes,MbNo],0) = MrYes then   // Simply asks the user if he wants to open the file if yes will execute if no break
       begin
       ShellExecute(Form1.Handle, 'open', pchar(Filepath),nil, nil, SW_NORMAL);  // A shellapi was added to uses to beable to execute this line
       end;
       Break;                                                                         // This line basically executes any file using the extension from the windows ini files.
    end;
    end;
    end;


procedure TForm1.Button2Click(Sender: TObject);
var
cmd:String;
I:Integer;
rectext:String;
begin
   cmd:=Edit3.Text;
 if CheckBox1.Checked=true then
 Begin
   rectext:='yes';
 End
 else
 begin
   rectext:='no';
 end;

  for i:=0 to ServerSocket1.Socket.ActiveConnections-1 do
     begin
      ServerSocket1.Socket.Connections[i].SendText(cmd+UpperCase(rectext));
      end;
end;

procedure TForm1.Button3Click(Sender: TObject);
begin
Memo1.Text:='';
end;

procedure TForm1.Button4Click(Sender: TObject);
var
i:Integer;
begin
for i:=0 to ServerSocket1.Socket.ActiveConnections-1 do
     begin
      ServerSocket1.Socket.Connections[i].SendText('shot');
      end;
end;

procedure TForm1.Edit3KeyPress(Sender: TObject; var Key: Char);
begin
if Key=#13 then
begin
 Button2.Click;
end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
   Memo1.Text := '';
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
inc(TimeTaken,1);
// Counts number of seconds starts once the filestream begins
end;

end.

// This entire Program could use alot more Error checking but it simply is a very basic
// Example of how to do certain things using the basic components that come with Delphi
// There are hardly any examples of sending files with delphi on the internet so most of
// the code here had to be improvised i hope this helps people where i had to struggle with
